pro [A] : {
    m <- {0,1};
    c := ctxt(m);
    j <- {'a','b','c'};
    return c xor k || j;
}

lib [L] : {
    rout ctxt(m : {0,1}) : {
        k <- {0,1};
        c := k xor m;
        return c;
    }
}
lib [R] : {
    rout ctxt(m : {0,1}) : {
        c <- {0,1};
        return c;
    }
}


lib [real] : {
    rout query() : {
        s <- {0,1};
        return H(s);
    }
}

lib [rand] : {
    rout query() : {
        r <- {0,1};
        return r;
    }
}

lib [left] : {
    rout ctxt(x: {0,1}) : {
        y <- {0,1};
        z <- {0,1};
        w := x + y + z;
        q := Mod(w,2);
        if (q xor q) is 0 then : {
            return w;
        }
        return w;
    }
}
lib [right] : {
    rout ctxt(x: {0,1}) : {
        y <- {0,1};
        z <- {0,1};
        return x + y + z;
    }
}

lib [real] : {
    rout ctxt(x,y : {'true','false'}) : {
        z <- {'true','false'};
        if x * y then : {
            return z;
        }
        return x + y;
    }
}
lib [rand] : {
    rout ctxt(x,y : {'true','false'}) : {
        z <- {'true','false'};
        return z;
    }
}


show pro[A] <> lib[rand].