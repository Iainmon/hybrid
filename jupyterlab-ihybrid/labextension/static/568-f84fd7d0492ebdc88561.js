"use strict";(self.webpackChunkjupyterlab_ihybrid=self.webpackChunkjupyterlab_ihybrid||[]).push([[568],{599:function(e,i,t){var r=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(n,d){function o(e){try{c(r.next(e))}catch(e){d(e)}}function u(e){try{c(r.throw(e))}catch(e){d(e)}}function c(e){var i;e.done?n(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(o,u)}c((r=r.apply(e,i||[])).next())}))};Object.defineProperty(i,"__esModule",{value:!0});const n=t(41);i.defineIHybridMode=function({CodeMirror:e}){return r(this,void 0,void 0,(function*(){yield n.Mode.ensure("hybrid"),yield n.Mode.ensure("r"),e.defineMode("ihybrid",(i=>{let t=e.getMode(i,"hybrid");return e.multiplexingMode(t,{open:/:(?=!)/,close:/^(?!!)/,mode:e.getMode(i,"text/plain"),delimStyle:"delimit"},{open:/\[r\||\[rprint\||\[rgraph\|/,close:/\|\]/,mode:e.getMode(i,"text/x-rsrc"),delimStyle:"delimit"})})),e.defineMIME("text/x-ihybrid","ihybrid"),e.modeInfo.push({ext:["hs"],mime:"text/x-ihybrid",mode:"ihybrid",name:"ihybrid"})}))}},568:(e,i,t)=>{Object.defineProperty(i,"__esModule",{value:!0});const r=t(41),n=t(599),d={id:"ihybrid",autoStart:!0,requires:[r.ICodeMirror],activate:(e,i)=>{n.defineIHybridMode(i).catch(console.warn)}};i.default=d}}]);